To add 

mint.json

- under Connect
  - "onboard-exchange/connect/how-it-works"

- after Connect

{
      "group": "mOps Integration",
      "pages": [
        "onboard-exchange/merchant-integrations/overview",
        "onboard-exchange/merchant-integrations/quick-start-guide",
        "onboard-exchange/merchant-integrations/how-it-works"
      ]
    },

- after Supported Tokens & Fiats

{
      "group": "Exchange APIs",
      "pages": [
        "onboard-exchange/merchant-integrations/overview",
        "onboard-exchange/merchant-integrations/quick-start-guide"
      ]
    }

- to exchange intro page (replace)

Whether you are building decentralized applications (dApps), wallets, or merchant platforms, Onboard Exchange offers two developer-friendly integration options tailored to different use cases:

- **[Onboard Connect](/onboard-exchange/connect):** Low-code integration targeted at dApps, wallets and products that want to easily provide a channel for their users to onramp and offramp within their product.
- **[mOps Integration](/onboard-exchange/merchant-integration):** API suite targeted at merchants and high-volume liquidity entities who want to automate the purchase and sale of crypto via their third-party platforms.


- to exchange intro page (after connect card)

<Card
    title="mOps Integration"
    icon="screwdriver-wrench"
    iconType="duotone"
    href="/onboard-exchange/merchant-integration"
  >
    Leverage our API to automate crypto to fiat transactions on your platform.
  </Card>

- to exchange overview page (before getting started)

## Sample Use Cases

<Tabs>
  <Tab title="üí™ Onboard Connect">
    ‚òùÔ∏è Welcome to the content that you can only see inside the first Tab.
  </Tab>
  <Tab title="üí™ mOps Integrations">
    ‚úåÔ∏è Here's content that's only inside the second Tab.
  </Tab>
</Tabs>

- connect overview page

## Primary use cases

- **Onramp:** Enable your users to easily deposit crypto into your application using various fiat payment methods like bank transfers, mobile wallets, and other local payment channels.
- **Offramp:** Allow your users to conveniently convert their tokens held in your dApp or wallet into fiat currencies, enabling easy withdrawal and spending.

Have a different use case? Check out [mOps Integrations](/onboard-exchange/merchant-integrations) or [contact us](mailto:nestechops@nestcoin.com) with more info.

at bottom:

### [How Connect Works](/onboard-exchange/connect/how-it-works.mdx)

Dive into the inner workings and lifecycle of a Connect integration.



Introduction ‚úÖ

- About Exchange (summary)
- brief description of two types of integrations (Onboard Connect & Merchant Integrations)
- cards for the two types

Connect > Overview

- About Onboard Connect (summary)
- Examples of use cases it can work with (and link to contact us)

Connect > How Connect Works

- brief description (its used in web browser)
- Connect lifecycle (GIFs)
    [in tabs] onramp / offramp
    steps of how it works (a la Stripe)
- introduce next page (integration)

Connect > Quick Start Integration

- setup API key (contact us for API key)
- integration is through redirect link (examples: https://paystack.com/docs/payments/accept-payments/#popup)
- query parameters
- code examples
    - Android
    - iOS

Connect > Supported Networks

Conenct > Supported Currencies & Payment Methods

Connect > Fee Integration


API

API > Authentication

- sample: https://docs.turso.tech/api-reference/authentication

API > Errors

- sample: 



Introduction

- Overview
  - Key Features
  - Use Cases
  - Quick Start Guide


  - Getting Started

Getting Started
Installing the SDK
System Requirements
Configuration
Setting Up Permissions
Initializing the Protocol

Core Concepts

- Technical Architecture
- 
- Escrow Lifecycle

- Protocol Features
  - Gasless Transactions
    - EIP-2612 Integration
    - Uniswap‚Äôs Permit2
  - Escrow Mechanism
    - Creating Off-Ramp Orders
    - Managing Funds in Escrow
  - Fee Structure
    - Setting Trade Fees
    - Handling Fee Recipients
  - Roles and Responsibilities
    - Initiator
    - Mediator
    - Market Maker
    - Transacting User

- Cost of Transactions


Smart Contract Reference
- Overview
- List of Contracts
  - Functions and Parameters
  - Examples for Each Function


Tutorials

Creating Your First Off-Ramp Order
Handling Disputes and Confirming Orders
Integrating Onboard Protocol with Your DApp

Advanced Topics

- Security Considerations
- Best Practices for Developers
- Performance Optimization


FAQ
- General Questions
- Troubleshooting
- Common Issues and Solutions

Community and Support

- Getting Help
- Contributing to Onboard
- Links to Forums, Discord, GitHub, and Social Media

---

more stuff to add

- how it works (exchange)-- how customers interact with it
  similar to Stripe's
  add mermaid / sequence diagram from docs
  mention transition states and some orders requiring acceptance

- add fee configuration

- add live API docs & samples

- add protocol docs

resources

- https://paystack.com/docs/
- https://docs.stripe.com/payments/quickstart
- https://diataxis.fr/
- merchant integrations
  - https://dev.docs.onboardpay.co/category/merchant-integrations
  - https://developers.onboard.xyz/merchant-integration
- custodial ramp
  - https://dev.docs.onboardpay.co/category/custodial-ramp-integration
- APIs
  - https://dev.docs.onboardpay.co/merchant-integration/api/doc
  - https://docs.nestechops.com/api-docs/index.html
